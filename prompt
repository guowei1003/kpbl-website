#初始化
我现在需要实现一个网站，网站为一个rules、的展示分享网站，网站布局可以参考：https://cursor.directory

#需求
1. 网站 logo 就使用一只躺着的卡皮巴拉动画形象，使用 svg 生成并使用，动画形象要非常可爱，并且动画要非常流畅。
2. 网站要有导航栏，导航栏要有首页、rules页面。
3. 首页实现一非常炫酷的动画，动画内容为卡皮巴拉在四处眺望。
4. rules 页面为左右布局，左侧为 rules 标签导航，右侧为 包含对应标签的所有 rules卡片，每行卡片的数量根据页面宽度自动适应，每个卡片从上到下的内容：rule内容、描述、点赞数、作者、发布时间，可操作性：卡片中的 rule 内容需要格式化展示， 左下角有个复制按钮，点击可复制。
5. 国际化支持，页面右上角增加一个语言切换，支持中文和英文切换，默认中文。
6. 主题切换支持，页面右上角增加一个太阳/月亮切换按钮，可切换浅色和深色主题，默认浅色。

#技术栈
1. 前后端：Nuxt3、Vue3、naive-ui等
2. 渲染模式：服务端渲染(SSR)
2. 数据库：SQLite
3. 部署：Docker、Nginx

# 项目结构
实现时基于下面的项目结构，实现时需要考虑代码的复用性、可维护性、可扩展性。
```
.
├── components
├── layouts
├── pages
├── public
├── tailwind.config.js
├── tsconfig.json
├── utils
└── nuxt.config.ts
```

#单条rule规则结构示例
```
{
    id: 3,
    description: '如何进行高效的代码审查，提高代码质量并促进团队协作。',
    content: `# 代码审查指南\n\n## 审查重点\n- 代码质量和可读性\n- 潜在的bug和边缘情况\n- 性能问题\n- 安全隐患\n\n## 审查流程\n1. 阅读提交信息和需求背景\n2. 浏览整体代码结构\n3. 详细检查关键逻辑\n4. 提供具体、建设性的反馈\n\n## 沟通技巧\n- 关注代码而非作者\n- 使用提问式反馈\n- 及时回应和讨论`,
    author: {
      id: 3,
      name: '王五',
      avatar: 'https://randomuser.me/api/portraits/men/3.jpg'
    },
    publishTime: '2024-03-22T15:45:00Z',
    stats: {
      likes: 84,
    },
    tags: [
      { id: 7, name: 'TypeScript' },
      { id: 8, name: 'JavaScript' },
      { id: 9, name: 'Vue' }
    ]
  }
```

# 项目要求
1. 实现时需要考虑代码的复用性、可维护性、可扩展性。
2. 实现时需要考虑用户体验，页面加载要快，尽量减少请求数，提高页面加载速度。
3. 实现时需要考虑SEO，页面要符合SEO规范。
4. 实现时需要考虑移动端适配。
5. 实现时需要考虑代码的规范性，尽量使用 ESLint 规范代码。
6. 实现时需要考虑代码的可读性，尽量使用有意义的变量名和函数名。
7. 实现时需要考虑代码的可维护性，尽量使用 TypeScript 类型。
10. 实现时需要考虑代码的安全性，尽量使用 Element-Plus 的组件。
11. 实现时需要考虑代码的国际化，尽量使用 i18n 的组件。
12. 接口请求使用 axios 实现，同时保持模块化，接口文档参考：https://docs.cursor.com/api/reference/introduction
13. 每次实现后要更新 readme.md 文件，更新内容包括：实现的功能、实现的方式、实现的效果。



